<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bulade.donor.authorization.dao.RolePermissionsMapper">

    <sql id="baseColumn">
        `id`,
        `role_id`,
        `permission_id`,
        `created_at`,
        `updated_at`,
        `deleted_at`
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_role_permissions` (
        `role_id`,
        `permission_id`,
        `created_at`,
        `updated_at`
        )
        VALUES
        (
        #{roleId},
        #{permissionId},
        now(),
        now()
        )
    </insert>

    <select id="selectById" resultType="com.bulade.donor.authorization.model.RolePermission">
        select
        <include refid="baseColumn"/>
        from t_role_permissions
        where id = #{id}
        and deleted_at is null
    </select>

    <select id="selectByRoleIdAndPermissionId" resultType="com.bulade.donor.authorization.model.RolePermission">
        select
        <include refid="baseColumn"/>
        from t_role_permissions
        where role_id = #{roleId}
        and permission_id = #{permissionId}
        and deleted_at is null
    </select>

    <update id="deleteById">
        update t_role_permissions
        set deleted_at = now()
        where `id` = #{id}
        and deleted_at is null
    </update>

    <sql id="listAllCondition">
        <where>
            <if test="rolePermission.roleId != null">
                and role_id = #{rolePermission.roleId}
            </if>
            <if test="rolePermission.permissionId != null">
                and permission_id = #{rolePermission.permissionId}
            </if>
            <if test="isDeleted != null">
                <if test="isDeleted">
                    and deleted_at is not null
                </if>
                <if test="!isDeleted">
                    and deleted_at is null
                </if>
            </if>
        </where>
    </sql>

    <select id="listAll" resultType="com.bulade.donor.authorization.model.RolePermission">
        select
        <include refid="baseColumn"/>
        from t_role_permissions
        <include refid="listAllCondition"/>
        limit #{pageParam.offset}, #{pageParam.limit}
    </select>

    <select id="countAll" resultType="int">
        select
        count(*)
        from t_role_permissions
        <include refid="listAllCondition"/>
    </select>

    <select id="listPermissionIdByRoleIds" resultType="long">
        select
        distinct permission_id
        from t_role_permissions
        where role_id in
        <foreach collection="roleIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and deleted_at is null
    </select>

</mapper>
